// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://saif:panzer123@cluster0.wqxdgwn.mongodb.net/next?retryWrites=true&w=majority"
}


model User {
  id       String   @id @map("_id") @db.ObjectId
  name     String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashpasswords String?
  created DateTime? @default(now())
  updated DateTime? @default(now())

  conversationsIds String[] @db.ObjectId
  conversations Conversations[] 
// @relation(fields: [conversationsIds], references: [id])

  seenMessagesIds String[] @db.ObjectId
  seenMessage Message[] @relation("Seen", fields: [seenMessagesIds], references: [id])


  accounts Account[]
  messages Message[]


}

model Account {
    id       String   @id @map("_id") @db.ObjectId
    userId String @db.ObjectId
    type String
    provider String
    providerAccountId String
    refresh_token String? @db.String
    access_token String? @db.String
    expires_in Int?
    token_type String?
    scope String?
    id_token String?
    sesstion_state String? 

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@unique([provider, providerAccountId ])
}


model Conversations {
      id       String   @id @map("_id") @db.ObjectId
      createAt DateTime @default(now())
      lastMessageAt DateTime @default(now())
      name String?
      isGroup Boolean?

      messagesIds String[] @db.ObjectId
      messages Message[]

      userIds String[] @db.ObjectId
      user User @relation(fields:[userIds], references: [id])

}

model Message {
        id       String   @id @map("_id") @db.ObjectId
        body String?
        image String?
        created_at DateTime @default(now())
        seenIds String[]  @db.ObjectId

        seen User[] @relation("Seen", fields: [seenIds], references: [id])

        conversationId String @db.ObjectId
        conversation Conversations @relation(fields: [conversationId], references: [id], onDelete: Cascade)
        
        senderId String @db.ObjectId
        sender User @relation(fields: [senderId], references: [id],  onDelete: Cascade)


}